{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Elembo Docs","title":"Accueil"},{"location":"#elembo-docs","text":"","title":"Elembo Docs"},{"location":"api/","text":"Documentation de l'API Cette API permet de g\u00e9rer toutes les requ\u00eates backend et est organis\u00e9e en 4 sections : Produits : pour la gestion des mati\u00e8res premi\u00e8res et des produits finis Inventaire : permet de g\u00e9rer les stocks, d'entrer et sortir des produits Production : permet de g\u00e9rer les \u00e9v\u00e9nements de productions Base URL Les URLs de base de chaque environnement sont document\u00e9 dans DevOps . https://<aws-api-gateway-url>/<stage> Produits Cr\u00e9er un produit Ajoute un nouveau produit \u00e0 la base de donn\u00e9es. POST /product Corps de la requ\u00eate : { \"Name\": \"Produit C\", \"Category\": \"Cat\u00e9gorie 3\", \"Description\": \"Description du produit C\", } R\u00e9ponse : Code 201 : Produit cr\u00e9\u00e9 avec succ\u00e8s. Code 400 : Erreur dans les donn\u00e9es envoy\u00e9es. Lister les produits R\u00e9cup\u00e8re la liste de tous les produits disponibles. GET /product/list R\u00e9ponse : [ { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" }, { \"ProductId\": \"67890\", \"Name\": \"Produit B\", \"Category\": \"Cat\u00e9gorie 2\", \"Description\": \"Description du produit B\" } ] R\u00e9cup\u00e9rer les d\u00e9tails d'un produit R\u00e9cup\u00e8re les d\u00e9tails d\u2019un produit sp\u00e9cifique. GET /product/{productId} Param\u00e8tre d'URL : - productId (string): ID du produit. R\u00e9ponse : { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" } Mettre \u00e0 jour un produit PUT /products/{productId}/edit Param\u00e8tres d'URL : productId (string): ID du produit. Corps de la requ\u00eate : { \"Description\": \"Produit C - Mis \u00e0 jour\", } R\u00e9ponse : Code 200 : Produit mis \u00e0 jour. Code 404 : Produit non trouv\u00e9. Supprimer un produit Supprime un produit sp\u00e9cifique. DELETE /products/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. R\u00e9ponse : Code 200 : Produit supprim\u00e9. Code 404 : Produit non trouv\u00e9. Inventaire Cr\u00e9er un nouveau lot Cr\u00e9er un nouveau lot. Cet API cr\u00e9e une transaction et ajoute un nouveau lot pour le produit d\u00e9sign\u00e9. La transaction est automatiquement li\u00e9e dans le lot. POST /transactions/receive Corps de la requ\u00eate : { \"To\": \"Lieu de r\u00e9ception\", \"TransactionDate\": \"2000-01-23T01:23:45.678+09:00\", } R\u00e9ponse : { \"transactionId\": \"89f8dbea-b327-44a7-8a16-ac7632c1d7de\", \"productLotId\": \"1b974476-3b95-48b4-91ca-1878da48bcdc\" } Lister les lots d'un produit Envoi la liste des lots d'un produit. Pour chaque lot, retourne \u00e9galement les inventaires et les transactions li\u00e9es \u00e0 ce lot. GET /transactions/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. Sortir un produit de stock Permet de sortir un produit, mati\u00e8re premi\u00e8re ou produit fini de stocks. POST /inventory/delivery Production Cr\u00e9er une production POST /production Permet de cr\u00e9er une production Lister les productions GET /production/list R\u00e9ponse : liste de productions Codes d'erreur communs 400 : Requ\u00eate mal form\u00e9e. 404 : Ressource introuvable. 500 : Erreur interne du serveur. Exemples d'utilisation Lister les produits curl -X GET https://<base-url>/<stage>/products Ajouter un produit curl -X POST https://votre-api-url.com/dev/products \\ -H \"Content-Type: application/json\" \\ -d '{ \"Name\": \"Nouveau Produit\", \"Category\": \"Cat\u00e9gorie\", \"Description\": \"Description du produit\" }'","title":"API"},{"location":"api/#documentation-de-lapi","text":"Cette API permet de g\u00e9rer toutes les requ\u00eates backend et est organis\u00e9e en 4 sections : Produits : pour la gestion des mati\u00e8res premi\u00e8res et des produits finis Inventaire : permet de g\u00e9rer les stocks, d'entrer et sortir des produits Production : permet de g\u00e9rer les \u00e9v\u00e9nements de productions","title":"Documentation de l'API"},{"location":"api/#base-url","text":"Les URLs de base de chaque environnement sont document\u00e9 dans DevOps . https://<aws-api-gateway-url>/<stage>","title":"Base URL"},{"location":"api/#produits","text":"","title":"Produits"},{"location":"api/#creer-un-produit","text":"Ajoute un nouveau produit \u00e0 la base de donn\u00e9es. POST /product Corps de la requ\u00eate : { \"Name\": \"Produit C\", \"Category\": \"Cat\u00e9gorie 3\", \"Description\": \"Description du produit C\", } R\u00e9ponse : Code 201 : Produit cr\u00e9\u00e9 avec succ\u00e8s. Code 400 : Erreur dans les donn\u00e9es envoy\u00e9es.","title":"Cr\u00e9er un produit"},{"location":"api/#lister-les-produits","text":"R\u00e9cup\u00e8re la liste de tous les produits disponibles. GET /product/list R\u00e9ponse : [ { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" }, { \"ProductId\": \"67890\", \"Name\": \"Produit B\", \"Category\": \"Cat\u00e9gorie 2\", \"Description\": \"Description du produit B\" } ]","title":"Lister les produits"},{"location":"api/#recuperer-les-details-dun-produit","text":"R\u00e9cup\u00e8re les d\u00e9tails d\u2019un produit sp\u00e9cifique. GET /product/{productId} Param\u00e8tre d'URL : - productId (string): ID du produit. R\u00e9ponse : { \"ProductId\": \"12345\", \"Name\": \"Produit A\", \"Category\": \"Cat\u00e9gorie 1\", \"Description\": \"Description du produit A\" }","title":"R\u00e9cup\u00e9rer les d\u00e9tails d'un produit"},{"location":"api/#mettre-a-jour-un-produit","text":"PUT /products/{productId}/edit Param\u00e8tres d'URL : productId (string): ID du produit. Corps de la requ\u00eate : { \"Description\": \"Produit C - Mis \u00e0 jour\", } R\u00e9ponse : Code 200 : Produit mis \u00e0 jour. Code 404 : Produit non trouv\u00e9.","title":"Mettre \u00e0 jour un produit"},{"location":"api/#supprimer-un-produit","text":"Supprime un produit sp\u00e9cifique. DELETE /products/{productId} Param\u00e8tres d'URL : productId (string): ID du produit. R\u00e9ponse : Code 200 : Produit supprim\u00e9. Code 404 : Produit non trouv\u00e9.","title":"Supprimer un produit"},{"location":"api/#inventaire","text":"","title":"Inventaire"},{"location":"api/#creer-un-nouveau-lot","text":"Cr\u00e9er un nouveau lot. Cet API cr\u00e9e une transaction et ajoute un nouveau lot pour le produit d\u00e9sign\u00e9. La transaction est automatiquement li\u00e9e dans le lot. POST /transactions/receive Corps de la requ\u00eate : { \"To\": \"Lieu de r\u00e9ception\", \"TransactionDate\": \"2000-01-23T01:23:45.678+09:00\", } R\u00e9ponse : { \"transactionId\": \"89f8dbea-b327-44a7-8a16-ac7632c1d7de\", \"productLotId\": \"1b974476-3b95-48b4-91ca-1878da48bcdc\" }","title":"Cr\u00e9er un nouveau lot"},{"location":"api/#lister-les-lots-dun-produit","text":"Envoi la liste des lots d'un produit. Pour chaque lot, retourne \u00e9galement les inventaires et les transactions li\u00e9es \u00e0 ce lot. GET /transactions/{productId} Param\u00e8tres d'URL : productId (string): ID du produit.","title":"Lister les lots d'un produit"},{"location":"api/#sortir-un-produit-de-stock","text":"Permet de sortir un produit, mati\u00e8re premi\u00e8re ou produit fini de stocks. POST /inventory/delivery","title":"Sortir un produit de stock"},{"location":"api/#production","text":"","title":"Production"},{"location":"api/#creer-une-production","text":"POST /production Permet de cr\u00e9er une production","title":"Cr\u00e9er une production"},{"location":"api/#lister-les-productions","text":"GET /production/list R\u00e9ponse : liste de productions","title":"Lister les productions"},{"location":"api/#codes-derreur-communs","text":"400 : Requ\u00eate mal form\u00e9e. 404 : Ressource introuvable. 500 : Erreur interne du serveur.","title":"Codes d'erreur communs"},{"location":"api/#exemples-dutilisation","text":"","title":"Exemples d'utilisation"},{"location":"api/#lister-les-produits_1","text":"curl -X GET https://<base-url>/<stage>/products","title":"Lister les produits"},{"location":"api/#ajouter-un-produit","text":"curl -X POST https://votre-api-url.com/dev/products \\ -H \"Content-Type: application/json\" \\ -d '{ \"Name\": \"Nouveau Produit\", \"Category\": \"Cat\u00e9gorie\", \"Description\": \"Description du produit\" }'","title":"Ajouter un produit"},{"location":"architecture/","text":"Architecture Composants API Gateway : interface fournissant une API pour tout le backend Lambda : Backend, tourne sur Python 3.13 DynamoDB : Base de donn\u00e9es NoSQL AWS Amplify : build et sert le frontend de mani\u00e8re statique, \u00e0 partir de Github React : Framework frontend (Javascript) utilis\u00e9 pour le frontend AWS Cognito : authentification et autorisation des utilisateurs Material UI : Librairie de composants pour l'interface utilisateur Diagramme Frontend Le frontend est construit avec React sur Vite.js. L'application web r\u00e9sultante fonctionne sur n'importe quel navigateur, mobile ou desktop. Le frontend est servi depuis AWS Amplify qui fait tourner Vite. Backend Le backend est compos\u00e9 de plusieurs services AWS, API Gateway pour recevoir les requ\u00eates et pr\u00e9parer les r\u00e9ponses, Lambda pour le compute et DynamoDB pour le stockage. Le backend est organis\u00e9s en trois services : Product : ce service fournit les interfaces pour g\u00e9rer les diff\u00e9rentes mati\u00e8res premi\u00e8res et produits finis disponibles Inventory : permet de g\u00e9rer les lots, ainsi que de faire toutes les manipulations de stock: r\u00e9ception et sortie. Production : permet de g\u00e9rer les \u00e9v\u00e9nements de production. Ce service fait appel au service Inventory pour modifier les stocks.","title":"Architecture"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"architecture/#composants","text":"API Gateway : interface fournissant une API pour tout le backend Lambda : Backend, tourne sur Python 3.13 DynamoDB : Base de donn\u00e9es NoSQL AWS Amplify : build et sert le frontend de mani\u00e8re statique, \u00e0 partir de Github React : Framework frontend (Javascript) utilis\u00e9 pour le frontend AWS Cognito : authentification et autorisation des utilisateurs Material UI : Librairie de composants pour l'interface utilisateur","title":"Composants"},{"location":"architecture/#diagramme","text":"","title":"Diagramme"},{"location":"architecture/#frontend","text":"Le frontend est construit avec React sur Vite.js. L'application web r\u00e9sultante fonctionne sur n'importe quel navigateur, mobile ou desktop. Le frontend est servi depuis AWS Amplify qui fait tourner Vite.","title":"Frontend"},{"location":"architecture/#backend","text":"Le backend est compos\u00e9 de plusieurs services AWS, API Gateway pour recevoir les requ\u00eates et pr\u00e9parer les r\u00e9ponses, Lambda pour le compute et DynamoDB pour le stockage. Le backend est organis\u00e9s en trois services : Product : ce service fournit les interfaces pour g\u00e9rer les diff\u00e9rentes mati\u00e8res premi\u00e8res et produits finis disponibles Inventory : permet de g\u00e9rer les lots, ainsi que de faire toutes les manipulations de stock: r\u00e9ception et sortie. Production : permet de g\u00e9rer les \u00e9v\u00e9nements de production. Ce service fait appel au service Inventory pour modifier les stocks.","title":"Backend"},{"location":"database/","text":"Base de donn\u00e9e La base de donn\u00e9e est organis\u00e9e \u00e9galement selon les service pr\u00e9sent\u00e9s dans [[architecture.md]] Products Service Product Catalog Collection Le catalogue produit fournit tous les product qui peuvent \u00eatre utilis\u00e9 par les autres services. Partition Key: productId { \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"archived\": true, // boolean \"name\": \"Ananas\", \"description\": \"Mati\u00e8re premi\u00e8re, Ananas\", \"type\": \"Produit fini\" // \"Produit fini\" ou \"Mati\u00e8re premi\u00e8re } Inventory Service Product Lot Collection Un product lot repr\u00e9sente un lot diff\u00e9rent d'un produit (produit fini ou mati\u00e8re premi\u00e8re). C'est \u00e0 ce niveau que les stocks sont g\u00e9r\u00e9s. Primary Key: productLotId, Sort Key: productId { \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to catalog \"type\": \"raw\", // \"raw\" OR \"end-product\" \"expirationDate\": \"None\", // Expiration date unmanaged yet \"name\": \"Ananas\", \"lotNumber\": \"3728373\", \"unit\": \"pi\u00e8ce\", \"inventory\": [{ \"stockQuantity\": 20, \"location\": \"Kimpese\", }] } Transactions Une transaction repr\u00e9sente un changement de stock, que ce soit une r\u00e9ception, sortie ou production. Les transactions permettent d'avoir l'historique d\u00e9taill\u00e9 d'un stock. { \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"fromLocation\": \"Kinshasa\", \"toLocation\": \"Goma POS\", \"transactionType\": \"transport\", // sale, purchase \"transactionDate\": 2024-12-31, \"productLots\": [{ \"lotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ID of a Product Lot \"quantity\": 25 }], \"properties\": {} } Production Collection Partition Key : location Sort Key : productionDate { \"productionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"location\": \"Kimpese\", \"inputs\": [{ \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to ProductLot \"quantity\": 20 }], \"outputs\": [{ \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to ProductLot \"quantity\": 20 }], \"productionDate\": 2024-31-12, } Accounts Collection not implemented yet. { \"accountID\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"AccountType\": \"Supplier\", // Supplier ou Customer \"Name\": \"Acme Corp.\", \"ContactInfo\": { \"Email\": \"contact@acmecorp.com\", \"Phone\": \"+123456789\", \"Address\": \"123 Acme St, Springfield\", \"AssociatedProducts\": [\"P123\", \"P124\", \"P125\"], \"AccountDetails\": {}, \"Properties\": {} } Other Entities Properties NOT IMPLEMENTED. Properties gives metadata information about the entity, it covers most entities in the database. \"properties\": { \"CreatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"CreatedAt\": \"2022-12-27 08:26:49.219717\", \"UpdatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"UpdatedAt\": \"2022-12-27 08:26:49.219717\" }","title":"Base de donn\u00e9es"},{"location":"database/#base-de-donnee","text":"La base de donn\u00e9e est organis\u00e9e \u00e9galement selon les service pr\u00e9sent\u00e9s dans [[architecture.md]]","title":"Base de donn\u00e9e"},{"location":"database/#products-service","text":"","title":"Products Service"},{"location":"database/#product-catalog-collection","text":"Le catalogue produit fournit tous les product qui peuvent \u00eatre utilis\u00e9 par les autres services. Partition Key: productId { \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"archived\": true, // boolean \"name\": \"Ananas\", \"description\": \"Mati\u00e8re premi\u00e8re, Ananas\", \"type\": \"Produit fini\" // \"Produit fini\" ou \"Mati\u00e8re premi\u00e8re }","title":"Product Catalog Collection"},{"location":"database/#inventory-service","text":"","title":"Inventory Service"},{"location":"database/#product-lot-collection","text":"Un product lot repr\u00e9sente un lot diff\u00e9rent d'un produit (produit fini ou mati\u00e8re premi\u00e8re). C'est \u00e0 ce niveau que les stocks sont g\u00e9r\u00e9s. Primary Key: productLotId, Sort Key: productId { \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to catalog \"type\": \"raw\", // \"raw\" OR \"end-product\" \"expirationDate\": \"None\", // Expiration date unmanaged yet \"name\": \"Ananas\", \"lotNumber\": \"3728373\", \"unit\": \"pi\u00e8ce\", \"inventory\": [{ \"stockQuantity\": 20, \"location\": \"Kimpese\", }] }","title":"Product Lot Collection"},{"location":"database/#transactions","text":"Une transaction repr\u00e9sente un changement de stock, que ce soit une r\u00e9ception, sortie ou production. Les transactions permettent d'avoir l'historique d\u00e9taill\u00e9 d'un stock. { \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"fromLocation\": \"Kinshasa\", \"toLocation\": \"Goma POS\", \"transactionType\": \"transport\", // sale, purchase \"transactionDate\": 2024-12-31, \"productLots\": [{ \"lotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ID of a Product Lot \"quantity\": 25 }], \"properties\": {} }","title":"Transactions"},{"location":"database/#production-collection","text":"Partition Key : location Sort Key : productionDate { \"productionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"location\": \"Kimpese\", \"inputs\": [{ \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to ProductLot \"quantity\": 20 }], \"outputs\": [{ \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to ProductLot \"quantity\": 20 }], \"productionDate\": 2024-31-12, }","title":"Production Collection"},{"location":"database/#accounts","text":"Collection not implemented yet. { \"accountID\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"AccountType\": \"Supplier\", // Supplier ou Customer \"Name\": \"Acme Corp.\", \"ContactInfo\": { \"Email\": \"contact@acmecorp.com\", \"Phone\": \"+123456789\", \"Address\": \"123 Acme St, Springfield\", \"AssociatedProducts\": [\"P123\", \"P124\", \"P125\"], \"AccountDetails\": {}, \"Properties\": {} }","title":"Accounts"},{"location":"database/#other-entities","text":"","title":"Other Entities"},{"location":"database/#properties","text":"NOT IMPLEMENTED. Properties gives metadata information about the entity, it covers most entities in the database. \"properties\": { \"CreatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"CreatedAt\": \"2022-12-27 08:26:49.219717\", \"UpdatedBy\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to user \"UpdatedAt\": \"2022-12-27 08:26:49.219717\" }","title":"Properties"},{"location":"dependencies/","text":"Dependencies Backend Pydantic: validation des requ\u00eates faites sur le backend Frontend eslint: code linting @mui/x-date-pickers: outil de Material UI pour offrir une interface propre pour la s\u00e9lection de date, via les formulaires dayjs: utilis\u00e9 par le date-picker de Material UI","title":"Dependencies"},{"location":"dependencies/#dependencies","text":"","title":"Dependencies"},{"location":"dependencies/#backend","text":"Pydantic: validation des requ\u00eates faites sur le backend","title":"Backend"},{"location":"dependencies/#frontend","text":"eslint: code linting @mui/x-date-pickers: outil de Material UI pour offrir une interface propre pour la s\u00e9lection de date, via les formulaires dayjs: utilis\u00e9 par le date-picker de Material UI","title":"Frontend"},{"location":"old-database/","text":"{ \"productLotId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", \"productId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to catalog \"type\": \"raw\", // \"raw\" OR \"finished\" \"name\": \"Ananas\", \"supplierId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to accounts table \"lotNumber\": \"3728373\", \"expirationDate\": \"2024-12-31\", // ISO8601 date \"unit\": \"pi\u00e8ce\", \"transactionLines\": [{ \"transactionId\": \"67103367-4da4-49c9-b1bf-d8be11c07f51\", // ref to transaction \"type\": \"in\", // in, out, production-usage, production-creation \"from\": \"Location\", \"to\": \"Location\", \"quantity\": 4 }], \"productionLines\": [{ \"location\": \"Location\", \"quantity\": 5 }], \"inventory\": [{ \"stockQuantity\": 20, \"location\": \"Goma POS\", }], \"properties\": {} }","title":"Old database"}]}